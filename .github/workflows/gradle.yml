name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # 1. GitHub 저장소 체크아웃
    - uses: actions/checkout@v4

    # 2. JDK 21 설치
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # 3. Gradle 설정 (캐시 포함)
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    # 4. 빌드 및 테스트 수행
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # 5. 테스트 결과를 PR에 코멘트로 표시
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: '**/build/test-results/test/TEST-*.xml'

    # 6. JaCoCo 커버리지 리포트 생성
    - name: Generate test coverage report
      run: ./gradlew jacocoTestReport

    # 7. 커버리지 리포트를 GitHub에 업로드
    - name: Upload coverage report
      uses: actions/upload-artifact@d6b036f993ef9249cbf561d0d9b5f4d5c6592bc4 
      with:
        name: jacoco-report
        path: build/reports/jacoco/test/html

    # 8. Discord 알림 발송
    - name: Notify Discord on build result
      if: always()
      uses: Ilshidur/action-discord@v1.0.1
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
        message: |
          🚀 GitHub Actions 완료: `${{ github.workflow }}`
          🔀 브랜치: `${{ github.ref_name }}`
          ✅ 상태: `Build job finished`
          🔗 [PR/커밋 보기](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
